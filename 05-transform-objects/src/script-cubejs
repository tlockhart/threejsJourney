import './style.css'
import * as THREE from 'three'

// Canvas
const canvas = document.querySelector('canvas.webgl')

// Scene
const scene = new THREE.Scene()

/**
 * Objects
 */
// const geometry = new THREE.BoxGeometry(1, 1, 1)
// const material = new THREE.MeshBasicMaterial({ color: 0xff0000 })
// const mesh = new THREE.Mesh(geometry, material)
// scene.add(mesh)

// // Position
// // mesh.position.x = 0.7
// // mesh.position.y = -0.6
// // mesh.position.z = 1
// mesh.position.set(0.7, -1.6, 1)

// // Scale
// // mesh.scale.x = 2
// // mesh.scale.y= 0.5
// // mesh.scale.z = 0.5
// mesh.scale.set(2, 0.5, 0.5);

// // used for half a rotation
// const pi = Math.PI

// // Euler Rotation: Not a vector 3, no set method
// mesh.rotation.reorder('YXZ')
// mesh.rotation.x = pi * 0.25;
// mesh.rotation.y = pi * 0.25;

// Axes Helper: Parameter will change the length of the axis
const axesHelper = new THREE.AxesHelper(3)
scene.add(axesHelper)

mesh.position.normalize()
/**
 * Sizes
 */
const sizes = {
    width: 800,
    height: 600
}

/**
 * Camera
 */
const camera = new THREE.PerspectiveCamera(75, sizes.width / sizes.height)
camera.position.z = 3
// camera.position.x = 1
// camera.position.y = 1
// console.log('Distance from Camera:', mesh.position.length(camera.position))
scene.add(camera)
camera.lookAt(mesh.position)


/**
 * Renderer
 */
const renderer = new THREE.WebGLRenderer({
    canvas: canvas
})
renderer.setSize(sizes.width, sizes.height)
renderer.render(scene, camera)